<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/supabase/src/app/features/auth/login.component.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/supabase/src/app/features/auth/login.component.html" />
              <option name="originalContent" value="&lt;main class=&quot;flex grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-5 items-center min-h-screen&quot; style=&quot;min-height:100vh;&quot;&gt;&#10;  &lt;div class=&quot;flex flex-col justify-center items-center h-full min-h-[60vh] fade-in&quot;&gt;&#10;    &lt;div&gt;&#10;      &lt;lucide-icon size=&quot;50&quot; [img]=&quot;Bird&quot; class=&quot;my-icon&quot;&gt;&lt;/lucide-icon&gt;&#10;    &lt;/div&gt;&#10;    &lt;div class=&quot;my-5&quot;&gt;&#10;      &lt;h4&gt;Sign in to your account&lt;/h4&gt;&#10;    &lt;/div&gt;&#10;    &lt;form [formGroup]=&quot;profileForm&quot; (ngSubmit)=&quot;onSubmit()&quot; class=&quot;w-full max-w-xs&quot;&gt;&#10;      &lt;div class=&quot;flex flex-col gap-5&quot;&gt;&#10;        &lt;mat-form-field class=&quot;w-full&quot;&gt;&#10;          &lt;mat-label&gt;Email&lt;/mat-label&gt;&#10;          &lt;input type=&quot;email&quot; matInput placeholder=&quot;&quot; formControlName=&quot;email&quot;&gt;&#10;        &lt;/mat-form-field&gt;&#10;        &lt;mat-form-field class=&quot;w-full&quot;&gt;&#10;          &lt;mat-label&gt;Passwort&lt;/mat-label&gt;&#10;          &lt;input type=&quot;password&quot; matInput placeholder=&quot;&quot; formControlName=&quot;password&quot;&gt;&#10;        &lt;/mat-form-field&gt;&#10;      &lt;/div&gt;&#10;      &lt;div class=&quot;mt-5&quot;&gt;&#10;        &lt;button matButton=&quot;elevated&quot; type=&quot;submit&quot; [disabled]=&quot;!profileForm.valid&quot;&gt;Submit&lt;/button&gt;&#10;      &lt;/div&gt;&#10;    &lt;/form&gt;&#10;  &lt;/div&gt;&#10;  &lt;div class=&quot;hidden md:flex h-full items-center justify-center&quot;&gt;&#10;    &lt;img ngSrc=&quot;/dump.webp&quot; alt=&quot;&quot; height=&quot;5272&quot; width=&quot;3948&quot; class=&quot;object-cover max-h-[80vh] rounded-xl shadow-lg&quot; /&gt;&#10;  &lt;/div&gt;&#10;&lt;/main&gt;&#10;" />
              <option name="updatedContent" value="&lt;main class=&quot;flex grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-5 items-center min-h-screen&quot; style=&quot;min-height:100vh;&quot;&gt;&#10;  &lt;div class=&quot;flex flex-col justify-center items-center h-full min-h-[60vh] fade-in&quot;&gt;&#10;    &lt;div&gt;&#10;      &lt;lucide-icon size=&quot;50&quot; [img]=&quot;Bird&quot; class=&quot;my-icon&quot;&gt;&lt;/lucide-icon&gt;&#10;    &lt;/div&gt;&#10;    &lt;div class=&quot;my-5&quot;&gt;&#10;      &lt;h4&gt;Sign in to your account&lt;/h4&gt;&#10;    &lt;/div&gt;&#10;    &lt;form [formGroup]=&quot;profileForm&quot; (ngSubmit)=&quot;onSubmit()&quot; class=&quot;w-full max-w-xs&quot;&gt;&#10;      &lt;div class=&quot;flex flex-col gap-5&quot;&gt;&#10;        &lt;mat-form-field class=&quot;w-full&quot;&gt;&#10;          &lt;mat-label&gt;Email&lt;/mat-label&gt;&#10;          &lt;input type=&quot;email&quot; matInput placeholder=&quot;&quot; formControlName=&quot;email&quot;&gt;&#10;        &lt;/mat-form-field&gt;&#10;        &lt;mat-form-field class=&quot;w-full&quot;&gt;&#10;          &lt;mat-label&gt;Passwort&lt;/mat-label&gt;&#10;          &lt;input type=&quot;password&quot; matInput placeholder=&quot;&quot; formControlName=&quot;password&quot;&gt;&#10;        &lt;/mat-form-field&gt;&#10;      &lt;/div&gt;&#10;      &lt;div class=&quot;mt-5&quot;&gt;&#10;        &lt;button matButton=&quot;elevated&quot; type=&quot;submit&quot; [disabled]=&quot;!profileForm.valid&quot;&gt;Submit&lt;/button&gt;&#10;      &lt;/div&gt;&#10;    &lt;/form&gt;&#10;  &lt;/div&gt;&#10;  &lt;div class=&quot;hidden md:flex h-full items-center justify-center&quot;&gt;&#10;    &lt;div class=&quot;relative w-full max-w-xs aspect-[3/4] max-h-[80vh]&quot;&gt;&#10;      &lt;img ngSrc=&quot;/dump.webp&quot; alt=&quot;&quot; width=&quot;3948&quot; height=&quot;5272&quot; class=&quot;object-cover w-full h-full rounded-xl shadow-lg&quot; /&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&lt;/main&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/supabase/src/styles.scss">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/supabase/src/styles.scss" />
              <option name="originalContent" value="&#10;// Include theming for Angular Material with `mat.theme()`.&#10;// This Sass mixin will define CSS variables that are used for styling Angular Material&#10;// components according to the Material 3 design spec.&#10;// Learn more about theming and how to use it for your application's&#10;// custom components at https://material.angular.dev/guide/theming&#10;@use '@angular/material' as mat;&#10;@import &quot;tailwindcss&quot;;&#10;&#10;&#10;html {&#10;  @include mat.theme((&#10;    color: (&#10;      primary: mat.$azure-palette,&#10;      tertiary: mat.$blue-palette,&#10;    ),&#10;    typography: Roboto,&#10;    density: 0,&#10;  ));&#10;}&#10;&#10;body {&#10;  // Default the application to a light color theme. This can be changed to&#10;  // `dark` to enable the dark color theme, or to `light dark` to defer to the&#10;  // user's system settings.&#10;  color-scheme: light;&#10;&#10;  // Set a default background, font and text colors for the application using&#10;  // Angular Material's system-level CSS variables. Learn more about these&#10;  // variables at https://material.angular.dev/guide/system-variables&#10;  background-color: var(--mat-sys-surface);&#10;  color: var(--mat-sys-on-surface);&#10;  font: var(--mat-sys-body-medium);&#10;&#10;  // Reset the user agent margin.&#10;  margin: 0;&#10;}&#10;/* You can add global styles to this file, and also import other style files */&#10;&#10;html, body { height: 100%; }&#10;body { margin: 0; font-family: Roboto, &quot;Helvetica Neue&quot;, sans-serif; }&#10;&#10;@layer components {&#10;  h1 {&#10;    @apply text-4xl sm:text-5xl md:text-6xl font-extrabold leading-tight tracking-tight text-gray-900 dark:text-gray-100 my-4;&#10;  }&#10;&#10;  h2 {&#10;    @apply text-3xl sm:text-4xl md:text-5xl font-bold leading-snug tracking-tight text-gray-900 dark:text-gray-100 my-3;&#10;  }&#10;&#10;  h3 {&#10;    @apply text-2xl sm:text-3xl md:text-4xl font-semibold leading-snug text-gray-900 dark:text-gray-100 my-3;&#10;  }&#10;&#10;  h4 {&#10;    @apply text-xl sm:text-2xl md:text-3xl font-semibold leading-snug text-gray-900 dark:text-gray-100 my-2;&#10;  }&#10;&#10;  h5 {&#10;    @apply text-lg sm:text-xl md:text-2xl font-medium leading-snug text-gray-900 dark:text-gray-100 my-2;&#10;  }&#10;&#10;  h6 {&#10;    @apply text-base sm:text-lg md:text-xl font-medium leading-snug text-gray-800 dark:text-gray-100 my-2;&#10;  }&#10;&#10;  .heading-anchor {&#10;    @apply inline-block ml-2 text-sm opacity-0 group-hover:opacity-100 transition-opacity;&#10;  }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="// Include theming for Angular Material with `mat.theme()`.&#10;// This Sass mixin will define CSS variables that are used for styling Angular Material&#10;// components according to the Material 3 design spec.&#10;// Learn more about theming and how to use it for your application's&#10;// custom components at https://material.angular.dev/guide/theming&#10;@use '@angular/material' as mat;&#10;@import &quot;tailwindcss&quot;;&#10;&#10;&#10;html {&#10;  @include mat.theme((&#10;    color: (&#10;      primary: mat.$azure-palette,&#10;      tertiary: mat.$blue-palette,&#10;    ),&#10;    typography: Roboto,&#10;    density: 0,&#10;  ));&#10;}&#10;&#10;body {&#10;  // Default the application to a light color theme. This can be changed to&#10;  // `dark` to enable the dark color theme, or to `light dark` to defer to the&#10;  // user's system settings.&#10;  color-scheme: light;&#10;&#10;  // Set a default background, font and text colors for the application using&#10;  // Angular Material's system-level CSS variables. Learn more about these&#10;  // variables at https://material.angular.dev/guide/system-variables&#10;  background-color: var(--mat-sys-surface);&#10;  color: var(--mat-sys-on-surface);&#10;  font: var(--mat-sys-body-medium);&#10;&#10;  // Reset the user agent margin.&#10;  margin: 0;&#10;}&#10;/* You can add global styles to this file, and also import other style files */&#10;&#10;html, body { height: 100%; }&#10;body { margin: 0; font-family: Roboto, &quot;Helvetica Neue&quot;, sans-serif; }&#10;&#10;@layer components {&#10;  h1 {&#10;    @apply text-4xl sm:text-5xl md:text-6xl font-extrabold leading-tight tracking-tight text-gray-900 dark:text-gray-100 my-4;&#10;  }&#10;&#10;  h2 {&#10;    @apply text-3xl sm:text-4xl md:text-5xl font-bold leading-snug tracking-tight text-gray-900 dark:text-gray-100 my-3;&#10;  }&#10;&#10;  h3 {&#10;    @apply text-2xl sm:text-3xl md:text-4xl font-semibold leading-snug text-gray-900 dark:text-gray-100 my-3;&#10;  }&#10;&#10;  h4 {&#10;    @apply text-xl sm:text-2xl md:text-3xl font-semibold leading-snug text-gray-900 dark:text-gray-100 my-2;&#10;  }&#10;&#10;  h5 {&#10;    @apply text-lg sm:text-xl md:text-2xl font-medium leading-snug text-gray-900 dark:text-gray-100 my-2;&#10;  }&#10;&#10;  h6 {&#10;    @apply text-base sm:text-lg md:text-xl font-medium leading-snug text-gray-800 dark:text-gray-100 my-2;&#10;  }&#10;&#10;  .heading-anchor {&#10;    @apply inline-block ml-2 text-sm opacity-0 group-hover:opacity-100 transition-opacity;&#10;  }&#10;}&#10;&#10;.fade-in {&#10;  opacity: 0;&#10;  animation: fadeIn 1s ease-in forwards;&#10;}&#10;&#10;@keyframes fadeIn {&#10;  from { opacity: 0; }&#10;  to { opacity: 1; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>